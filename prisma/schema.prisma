datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String @id @default(cuid())
  email     String @unique
  firstName String
  lastName  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  leagues  UsersOnLeagues[]
  League   League[]
  Pick     Pick[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model League {
  id       Int    @id @default(autoincrement())
  hash     String @default(cuid())
  name     String
  password String

  isLocked   Boolean
  isArchived Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  users UsersOnLeagues[]
  teams Team[]
  Pick  Pick[]
}

model UsersOnLeagues {
  league   League @relation(fields: [leagueId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  leagueId Int
  user     User   @relation(fields: [userId], references: [id])
  userId   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([leagueId, userId])
}

model Team {
  id           Int    @id @default(autoincrement())
  name         String
  abbreviation String
  rank         Int
  conference   String
  wins         Int

  imageUri String @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  league   League @relation(fields: [leagueId], references: [id])
  leagueId Int
  picks    Pick[]
}

model Pick {
  league   League @relation(fields: [leagueId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  leagueId Int
  user     User   @relation(fields: [userId], references: [id])
  userId   String
  team     Team   @relation(fields: [teamId], references: [id])
  teamId   Int

  points Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([leagueId, userId, teamId])
}
